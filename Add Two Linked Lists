class ListNode:
    def __init__(self, x):
        self.val = x
        self.next = None

class Solution:
    
    def get_length(self, l):
        n = 1
        while l.next:
            l = l.next
            n += 1
        return n 
    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:
        carry = 0
        n1 = self.get_length(l1)
        n2 = self.get_length(l2)
        s = ListNode(0)
        head = s
        diff = abs(n1-n2)
        if n1<n2:
            start = l1
            for i in range(1,n1):
                start = start.next
            for i in range(diff):
                temp = ListNode(0)
                start.next = temp
                start = start.next
        elif n2<n1:
            start = l2
            for i in range(1,n2):
                start = start.next
            for i in range(diff):
                temp = ListNode(0)
                start.next = temp
                start = start.next
        carry = 0
        # print(n1,n2)
        for i in range(max(n1,n2)):
            temp = l1.val + l2.val + carry
            # print(temp)
            carry = temp//10
            rem = temp%10
            s.val = rem
            print(carry, rem)
            if i==max(n1,n2)-1 and carry==0:
                break
            s1 = ListNode(0)
            s.next = s1
            s = s.next
            l1 = l1.next
            l2 = l2.next
        # print(carry)
        if carry>0:
            s.val = carry
        
        return head
